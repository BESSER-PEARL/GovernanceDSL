# Generated from govdsl.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,38,357,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,
        1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,
        1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,
        12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,
        14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,
        16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,
        18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,
        20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,
        23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,
        25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,
        27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,
        29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
        30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,
        32,1,32,1,32,1,32,1,32,1,33,1,33,5,33,319,8,33,10,33,12,33,322,9,
        33,1,34,1,34,5,34,326,8,34,10,34,12,34,329,9,34,1,35,4,35,332,8,
        35,11,35,12,35,333,1,36,4,36,337,8,36,11,36,12,36,338,1,36,1,36,
        4,36,343,8,36,11,36,12,36,344,1,37,1,37,3,37,349,8,37,1,37,4,37,
        352,8,37,11,37,12,37,353,1,37,1,37,0,0,38,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
        57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,1,0,
        5,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,97,122,
        1,0,48,57,2,0,9,9,32,32,364,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
        0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
        17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
        27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
        37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
        47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,
        57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
        67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,1,
        77,1,0,0,0,3,85,1,0,0,0,5,87,1,0,0,0,7,89,1,0,0,0,9,95,1,0,0,0,11,
        97,1,0,0,0,13,99,1,0,0,0,15,109,1,0,0,0,17,115,1,0,0,0,19,124,1,
        0,0,0,21,135,1,0,0,0,23,141,1,0,0,0,25,154,1,0,0,0,27,158,1,0,0,
        0,29,163,1,0,0,0,31,175,1,0,0,0,33,188,1,0,0,0,35,196,1,0,0,0,37,
        203,1,0,0,0,39,209,1,0,0,0,41,217,1,0,0,0,43,227,1,0,0,0,45,236,
        1,0,0,0,47,244,1,0,0,0,49,250,1,0,0,0,51,257,1,0,0,0,53,262,1,0,
        0,0,55,268,1,0,0,0,57,275,1,0,0,0,59,281,1,0,0,0,61,290,1,0,0,0,
        63,303,1,0,0,0,65,309,1,0,0,0,67,316,1,0,0,0,69,323,1,0,0,0,71,331,
        1,0,0,0,73,336,1,0,0,0,75,351,1,0,0,0,77,78,5,80,0,0,78,79,5,114,
        0,0,79,80,5,111,0,0,80,81,5,106,0,0,81,82,5,101,0,0,82,83,5,99,0,
        0,83,84,5,116,0,0,84,2,1,0,0,0,85,86,5,123,0,0,86,4,1,0,0,0,87,88,
        5,125,0,0,88,6,1,0,0,0,89,90,5,82,0,0,90,91,5,111,0,0,91,92,5,108,
        0,0,92,93,5,101,0,0,93,94,5,115,0,0,94,8,1,0,0,0,95,96,5,58,0,0,
        96,10,1,0,0,0,97,98,5,44,0,0,98,12,1,0,0,0,99,100,5,68,0,0,100,101,
        5,101,0,0,101,102,5,97,0,0,102,103,5,100,0,0,103,104,5,108,0,0,104,
        105,5,105,0,0,105,106,5,110,0,0,106,107,5,101,0,0,107,108,5,115,
        0,0,108,14,1,0,0,0,109,110,5,82,0,0,110,111,5,117,0,0,111,112,5,
        108,0,0,112,113,5,101,0,0,113,114,5,115,0,0,114,16,1,0,0,0,115,116,
        5,100,0,0,116,117,5,101,0,0,117,118,5,97,0,0,118,119,5,100,0,0,119,
        120,5,108,0,0,120,121,5,105,0,0,121,122,5,110,0,0,122,123,5,101,
        0,0,123,18,1,0,0,0,124,125,5,97,0,0,125,126,5,112,0,0,126,127,5,
        112,0,0,127,128,5,108,0,0,128,129,5,105,0,0,129,130,5,101,0,0,130,
        131,5,100,0,0,131,132,5,32,0,0,132,133,5,116,0,0,133,134,5,111,0,
        0,134,20,1,0,0,0,135,136,5,73,0,0,136,137,5,115,0,0,137,138,5,115,
        0,0,138,139,5,117,0,0,139,140,5,101,0,0,140,22,1,0,0,0,141,142,5,
        80,0,0,142,143,5,117,0,0,143,144,5,108,0,0,144,145,5,108,0,0,145,
        146,5,32,0,0,146,147,5,114,0,0,147,148,5,101,0,0,148,149,5,113,0,
        0,149,150,5,117,0,0,150,151,5,101,0,0,151,152,5,115,0,0,152,153,
        5,116,0,0,153,24,1,0,0,0,154,155,5,65,0,0,155,156,5,108,0,0,156,
        157,5,108,0,0,157,26,1,0,0,0,158,159,5,119,0,0,159,160,5,104,0,0,
        160,161,5,101,0,0,161,162,5,110,0,0,162,28,1,0,0,0,163,164,5,84,
        0,0,164,165,5,97,0,0,165,166,5,115,0,0,166,167,5,107,0,0,167,168,
        5,32,0,0,168,169,5,82,0,0,169,170,5,101,0,0,170,171,5,118,0,0,171,
        172,5,105,0,0,172,173,5,101,0,0,173,174,5,119,0,0,174,30,1,0,0,0,
        175,176,5,80,0,0,176,177,5,97,0,0,177,178,5,116,0,0,178,179,5,99,
        0,0,179,180,5,104,0,0,180,181,5,32,0,0,181,182,5,82,0,0,182,183,
        5,101,0,0,183,184,5,118,0,0,184,185,5,105,0,0,185,186,5,101,0,0,
        186,187,5,119,0,0,187,32,1,0,0,0,188,189,5,82,0,0,189,190,5,101,
        0,0,190,191,5,108,0,0,191,192,5,101,0,0,192,193,5,97,0,0,193,194,
        5,115,0,0,194,195,5,101,0,0,195,34,1,0,0,0,196,197,5,112,0,0,197,
        198,5,101,0,0,198,199,5,111,0,0,199,200,5,112,0,0,200,201,5,108,
        0,0,201,202,5,101,0,0,202,36,1,0,0,0,203,204,5,114,0,0,204,205,5,
        97,0,0,205,206,5,110,0,0,206,207,5,103,0,0,207,208,5,101,0,0,208,
        38,1,0,0,0,209,210,5,80,0,0,210,211,5,114,0,0,211,212,5,101,0,0,
        212,213,5,115,0,0,213,214,5,101,0,0,214,215,5,110,0,0,215,216,5,
        116,0,0,216,40,1,0,0,0,217,218,5,81,0,0,218,219,5,117,0,0,219,220,
        5,97,0,0,220,221,5,108,0,0,221,222,5,105,0,0,222,223,5,102,0,0,223,
        224,5,105,0,0,224,225,5,101,0,0,225,226,5,100,0,0,226,42,1,0,0,0,
        227,228,5,109,0,0,228,229,5,105,0,0,229,230,5,110,0,0,230,231,5,
        86,0,0,231,232,5,111,0,0,232,233,5,116,0,0,233,234,5,101,0,0,234,
        235,5,115,0,0,235,44,1,0,0,0,236,237,5,100,0,0,237,238,5,101,0,0,
        238,239,5,102,0,0,239,240,5,97,0,0,240,241,5,117,0,0,241,242,5,108,
        0,0,242,243,5,116,0,0,243,46,1,0,0,0,244,245,5,114,0,0,245,246,5,
        97,0,0,246,247,5,116,0,0,247,248,5,105,0,0,248,249,5,111,0,0,249,
        48,1,0,0,0,250,251,5,112,0,0,251,252,5,104,0,0,252,253,5,97,0,0,
        253,254,5,115,0,0,254,255,5,101,0,0,255,256,5,115,0,0,256,50,1,0,
        0,0,257,258,5,100,0,0,258,259,5,97,0,0,259,260,5,121,0,0,260,261,
        5,115,0,0,261,52,1,0,0,0,262,263,5,119,0,0,263,264,5,101,0,0,264,
        265,5,101,0,0,265,266,5,107,0,0,266,267,5,115,0,0,267,54,1,0,0,0,
        268,269,5,109,0,0,269,270,5,111,0,0,270,271,5,110,0,0,271,272,5,
        116,0,0,272,273,5,104,0,0,273,274,5,115,0,0,274,56,1,0,0,0,275,276,
        5,121,0,0,276,277,5,101,0,0,277,278,5,97,0,0,278,279,5,114,0,0,279,
        280,5,115,0,0,280,58,1,0,0,0,281,282,5,77,0,0,282,283,5,97,0,0,283,
        284,5,106,0,0,284,285,5,111,0,0,285,286,5,114,0,0,286,287,5,105,
        0,0,287,288,5,116,0,0,288,289,5,121,0,0,289,60,1,0,0,0,290,291,5,
        76,0,0,291,292,5,101,0,0,292,293,5,97,0,0,293,294,5,100,0,0,294,
        295,5,101,0,0,295,296,5,114,0,0,296,297,5,68,0,0,297,298,5,114,0,
        0,298,299,5,105,0,0,299,300,5,118,0,0,300,301,5,101,0,0,301,302,
        5,110,0,0,302,62,1,0,0,0,303,304,5,82,0,0,304,305,5,97,0,0,305,306,
        5,116,0,0,306,307,5,105,0,0,307,308,5,111,0,0,308,64,1,0,0,0,309,
        310,5,80,0,0,310,311,5,104,0,0,311,312,5,97,0,0,312,313,5,115,0,
        0,313,314,5,101,0,0,314,315,5,100,0,0,315,66,1,0,0,0,316,320,7,0,
        0,0,317,319,7,1,0,0,318,317,1,0,0,0,319,322,1,0,0,0,320,318,1,0,
        0,0,320,321,1,0,0,0,321,68,1,0,0,0,322,320,1,0,0,0,323,327,7,2,0,
        0,324,326,7,1,0,0,325,324,1,0,0,0,326,329,1,0,0,0,327,325,1,0,0,
        0,327,328,1,0,0,0,328,70,1,0,0,0,329,327,1,0,0,0,330,332,7,3,0,0,
        331,330,1,0,0,0,332,333,1,0,0,0,333,331,1,0,0,0,333,334,1,0,0,0,
        334,72,1,0,0,0,335,337,7,3,0,0,336,335,1,0,0,0,337,338,1,0,0,0,338,
        336,1,0,0,0,338,339,1,0,0,0,339,340,1,0,0,0,340,342,5,46,0,0,341,
        343,7,3,0,0,342,341,1,0,0,0,343,344,1,0,0,0,344,342,1,0,0,0,344,
        345,1,0,0,0,345,74,1,0,0,0,346,352,7,4,0,0,347,349,5,13,0,0,348,
        347,1,0,0,0,348,349,1,0,0,0,349,350,1,0,0,0,350,352,5,10,0,0,351,
        346,1,0,0,0,351,348,1,0,0,0,352,353,1,0,0,0,353,351,1,0,0,0,353,
        354,1,0,0,0,354,355,1,0,0,0,355,356,6,37,0,0,356,76,1,0,0,0,9,0,
        320,327,333,338,344,348,351,353,1,6,0,0
    ]

class govdslLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    ID = 34
    ATTR_ID = 35
    INT = 36
    FLOAT = 37
    WS = 38

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'Project'", "'{'", "'}'", "'Roles'", "':'", "','", "'Deadlines'", 
            "'Rules'", "'deadline'", "'applied to'", "'Issue'", "'Pull request'", 
            "'All'", "'when'", "'Task Review'", "'Patch Review'", "'Release'", 
            "'people'", "'range'", "'Present'", "'Qualified'", "'minVotes'", 
            "'default'", "'ratio'", "'phases'", "'days'", "'weeks'", "'months'", 
            "'years'", "'Majority'", "'LeaderDriven'", "'Ratio'", "'Phased'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "ATTR_ID", "INT", "FLOAT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "ID", "ATTR_ID", "INT", "FLOAT", "WS" ]

    grammarFileName = "govdsl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


